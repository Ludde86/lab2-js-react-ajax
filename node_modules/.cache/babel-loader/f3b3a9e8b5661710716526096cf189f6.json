{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ludde\\\\Desktop\\\\lab2-js-react-ajax\\\\src\\\\components\\\\ApiKey.js\";\nimport React from \"react\";\n\nfunction request(qs, cb) {\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  // Initiera ett request med basurl och querystring\n  fetch(\"\".concat(url).concat(qs)).then(function (response) {\n    // Konverta svaret till JavaScript-objekt\n    return response.json();\n  }).then(function (data) {\n    // Kolla hur svaret ser ut från apiet\n    // Om operationen lyckades så kör funktionen cb\n    if (data.status === \"success\") {\n      if (cb) {\n        cb(data);\n      } // Lyckas inte operationen och gränsen för hur många requests som får göras inte är nådd\n      // Gör ett nytt request\n\n    } else if (limit > 0) {\n      request(qs, cb, limit - 1); // Om operationen inte lyckats innan gränsen för antalet requests uppnåtts\n      // Skicka inte ett nytt request utan bara skriv ut felmeddelande i konsolen\n    } else {\n      console.log(data.message);\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nvar ApiKey = function ApiKey() {\n  function getApiKey(callback) {\n    request(\"requestKey\", function (data) {\n      // Spara api-nyckel i localStorage\n      localStorage.setItem(\"apiKey\", data.key); // Om callback är definerad kör callback\n\n      if (callback) {\n        callback(data.key);\n      }\n    });\n  }\n\n  var buttonStyle = {\n    width: \"250px\"\n  };\n  return React.createElement(\"button\", {\n    onClick: getNewAPIKey,\n    type: \"button\",\n    className: \"btn btn-primary btn-lg btn-block\",\n    style: buttonStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Generera ny API-Nyckel\");\n};\n\nexport default ApiKey;","map":{"version":3,"sources":["C:\\Users\\Ludde\\Desktop\\lab2-js-react-ajax\\src\\components\\ApiKey.js"],"names":["React","request","qs","cb","limit","fetch","url","then","response","json","data","status","console","log","message","catch","error","ApiKey","getApiKey","callback","localStorage","setItem","key","buttonStyle","width","getNewAPIKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,EAArB,EAAqC;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AACnC;AAEAC,EAAAA,KAAK,WAAIC,GAAJ,SAAUJ,EAAV,EAAL,CACGK,IADH,CACQ,UAASC,QAAT,EAAmB;AACvB;AAEA,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GALH,EAOGF,IAPH,CAOQ,UAASG,IAAT,EAAe;AACnB;AAEA;AAEA,QAAIA,IAAI,CAACC,MAAL,KAAgB,SAApB,EAA+B;AAC7B,UAAIR,EAAJ,EAAQ;AACNA,QAAAA,EAAE,CAACO,IAAD,CAAF;AACD,OAH4B,CAK7B;AAEA;;AACD,KARD,MAQO,IAAIN,KAAK,GAAG,CAAZ,EAAe;AACpBH,MAAAA,OAAO,CAACC,EAAD,EAAKC,EAAL,EAASC,KAAK,GAAG,CAAjB,CAAP,CADoB,CAGpB;AAEA;AACD,KANM,MAMA;AACLQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,OAAjB;AACD;AACF,GA7BH,EA+BGC,KA/BH,CA+BS,UAASC,KAAT,EAAgB;AACrBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,GAjCH;AAkCD;;AAED,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,WAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAC3BlB,IAAAA,OAAO,CAAC,YAAD,EAAe,UAASS,IAAT,EAAe;AACnC;AAEAU,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BX,IAAI,CAACY,GAApC,EAHmC,CAKnC;;AAEA,UAAIH,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACT,IAAI,CAACY,GAAN,CAAR;AACD;AACF,KAVM,CAAP;AAWD;;AAED,MAAMC,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAE;AADW,GAApB;AAIA,SACE;AACE,IAAA,OAAO,EAAEC,YADX;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,kCAHZ;AAIE,IAAA,KAAK,EAAEF,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF;AAUD,CA7BD;;AA+BA,eAAeN,MAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction request(qs, cb, limit = 10) {\r\n  // Initiera ett request med basurl och querystring\r\n\r\n  fetch(`${url}${qs}`)\r\n    .then(function(response) {\r\n      // Konverta svaret till JavaScript-objekt\r\n\r\n      return response.json();\r\n    })\r\n\r\n    .then(function(data) {\r\n      // Kolla hur svaret ser ut från apiet\r\n\r\n      // Om operationen lyckades så kör funktionen cb\r\n\r\n      if (data.status === \"success\") {\r\n        if (cb) {\r\n          cb(data);\r\n        }\r\n\r\n        // Lyckas inte operationen och gränsen för hur många requests som får göras inte är nådd\r\n\r\n        // Gör ett nytt request\r\n      } else if (limit > 0) {\r\n        request(qs, cb, limit - 1);\r\n\r\n        // Om operationen inte lyckats innan gränsen för antalet requests uppnåtts\r\n\r\n        // Skicka inte ett nytt request utan bara skriv ut felmeddelande i konsolen\r\n      } else {\r\n        console.log(data.message);\r\n      }\r\n    })\r\n\r\n    .catch(function(error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nconst ApiKey = () => {\r\n  function getApiKey(callback) {\r\n    request(\"requestKey\", function(data) {\r\n      // Spara api-nyckel i localStorage\r\n\r\n      localStorage.setItem(\"apiKey\", data.key);\r\n\r\n      // Om callback är definerad kör callback\r\n\r\n      if (callback) {\r\n        callback(data.key);\r\n      }\r\n    });\r\n  }\r\n\r\n  const buttonStyle = {\r\n    width: \"250px\"\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={getNewAPIKey}\r\n      type=\"button\"\r\n      className=\"btn btn-primary btn-lg btn-block\"\r\n      style={buttonStyle}\r\n    >\r\n      Generera ny API-Nyckel\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ApiKey;\r\n"]},"metadata":{},"sourceType":"module"}